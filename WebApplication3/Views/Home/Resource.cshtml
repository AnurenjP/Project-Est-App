<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Project Timeline and Resources</title>
    <link rel="stylesheet" href="~/Content/site.css">
    <script>
        function saveData() {
            const resources = {};
             const resourceCounts = JSON.parse(localStorage.getItem('resourceCounts')) || {
                     devTeamLead: 0,
                    seniorDeveloper: 0,
                    developer: 0

                };

                const testresourceCounts = JSON.parse(localStorage.getItem('testresourceCounts')) || {
                    qaTeamLead: 0,
                    seniorTester: 0,
                    tester: 0

                };

            
            document.querySelectorAll('.grid-item input').forEach(input => {
                const resourceType = input.name.replace('New', '');
                if (!resources[resourceType]) {
                    resources[resourceType] = { count: 0, names: [] };
                }
                resources[resourceType].names.push(input.value);
                resources[resourceType].count++;

                if (['devTeamLead','seniorDeveloper', 'developer'].includes(resourceType)){
                    resourceCounts[resourceType] = resources[resourceType].count;
                }

                 if (['qaTeamLead','seniorTester', 'tester'].includes(resourceType)){
                    testresourceCounts[resourceType] =  resources[resourceType].count;
                }
            });
            localStorage.setItem('resources', JSON.stringify(resources));

            const projectStartDate = document.getElementById('projectStartDate').value;
            const projectEndDate = document.getElementById('projectEndDate').value;
            localStorage.setItem('projectStartDate', projectStartDate);
            localStorage.setItem('projectEndDate', projectEndDate);

            // const resourcedata = countResources();

            // const { resourceCounts, testresourceCounts } = resourcedata;

            localStorage.setItem('resourceCounts', JSON.stringify(resourceCounts));

            localStorage.setItem('testresourceCounts', JSON.stringify(testresourceCounts));

            window.location.href = '@Url.Content("~/Home/Sampletimeline")'; // Ensure the correct path
        }
        function saveData() {
            const resources = {};

            document.querySelectorAll('.grid-item input').forEach(input => {
                const resourceType = input.name.replace('New', '');
                if (!resources[resourceType]) {
                    resources[resourceType] = { count: 0, names: [] };
                }
                resources[resourceType].names.push(input.value);
                resources[resourceType].count++;
            });
            localStorage.setItem('resources', JSON.stringify(resources));

            const projectStartDate = document.getElementById('projectStartDate').value;
            const projectEndDate = document.getElementById('projectEndDate').value;
            localStorage.setItem('projectStartDate', projectStartDate);
            localStorage.setItem('projectEndDate', projectEndDate);

            window.location.href = '@Url.Content("~/Home/Sampletimeline")'; // Ensure the correct path
        }

        function addResource() {
            const resourceType = document.getElementById('resourceType').value;
            const resourceContainer = document.getElementById('resourceContainer');
            const existingResource = document.querySelector(`label[for="${resourceType}"]`).parentElement;

            const newResource = document.createElement('div');
            newResource.className = 'grid-item';

            const resourceLabel = document.createElement('label');
            const formattedResourceType = resourceType.replace(/([A-Z])/g, ' $1').trim();
            resourceLabel.textContent = capitalizeFirstLetter(formattedResourceType) + ':';
            resourceLabel.setAttribute('for', resourceType + 'New');

            const resourceInput = document.createElement('input');
            resourceInput.type = 'text';
            resourceInput.id = resourceType + 'New';
            resourceInput.name = resourceType + 'New';
            resourceInput.maxLength = 25;

            newResource.appendChild(resourceLabel);
            newResource.appendChild(resourceInput);

            existingResource.insertAdjacentElement('afterend', newResource);
        }
       
         

        function capitalizeFirstLetter(string) {
            return string.charAt(0).toUpperCase() + string.slice(1);
        }
    </script>
    
</head>

<body>
    <header style="color:black; text-align:left; font-size:36px; font-weight:bold; margin-top:50px;margin-bottom:30px;">
        Estimation Page
    </header>
    <form>
        <fieldset>
            <legend>Resources Required</legend>
            <div id="resourceContainer" class="grid-container">
                <div class="grid-item">
                    <label for="deliveryManager">Delivery Manager:</label>
                    <input type="text" id="deliveryManager" name="deliveryManager" maxlength="25">
                </div>
                <div class="grid-item">
                    <label for="seniorManager">Senior Manager:</label>
                    <input type="text" id="seniorManager" name="seniorManager" maxlength="25">
                </div>
                <div class="grid-item">
                    <label for="manager">Manager:</label>
                    <input type="text" id="manager" name="manager" maxlength="25">
                </div>
                <div class="grid-item">
                    <label for="projectLead">Project Lead:</label>
                    <input type="text" id="projectLead" name="projectLead" maxlength="25">
                </div>
                <div class="grid-item">
                    <label for="devTeamLead">Dev Team Lead:</label>
                    <input type="text" id="devTeamLead" name="devTeamLead" maxlength="25">
                </div>
                <div class="grid-item">
                    <label for="seniorDeveloper">Senior Developer:</label>
                    <input type="text" id="seniorDeveloper" name="seniorDeveloper" maxlength="25">
                </div>
                <div class="grid-item">
                    <label for="developer">Developer:</label>
                    <input type="text" id="developer" name="developer" maxlength="25">
                </div>
                <div class="grid-item">
                    <label for="qaTeamLead">Testing Lead :</label>
                    <input type="text" id="qaTeamLead" name="qaTeamLead" maxlength="25">
                </div>
                <div class="grid-item">
                    <label for="seniorTester">Senior Tester:</label>
                    <input type="text" id="seniorTester" name="seniorTester" maxlength="25">
                </div>
                <div class="grid-item">
                    <label for="tester">Tester:</label>
                    <input type="text" id="tester" name="tester" maxlength="25">
                </div>
                <div class="grid-item">
                    <label for="deploymentTeam">Deployment Team:</label>
                    <input type="text" id="deploymentTeam" name="deploymentTeam" maxlength="25">
                </div>
            </div>
            <div class="grid-item">
                <label for="resourceType">Select Resource Type:</label>
                <select id="resourceType">
                    <option value="deliveryManager">Delivery Manager</option>
                    <option value="seniorManager">Senior Manager</option>
                    <option value="manager">Manager</option>
                    <option value="projectLead">Project Lead</option>
                    <option value="devTeamLead">Dev Team Lead</option>
                    <option value="seniorDeveloper">Senior Developer</option>
                    <option value="developer">Developer</option>
                    <option value="qaTeamLead">Testing Lead </option>
                    <option value="seniorTester">Senior Tester</option>
                    <option value="tester">Tester</option>
                    <option value="deploymentTeam">Deployment Team</option>
                </select>
                <button type="button" onclick="addResource()">Add New Resource</button>
            </div>
        </fieldset>

        <fieldset>
            <legend>Project Timeline</legend>
            <div class="grid-container">
                <div class="grid-item">
                    <label for="projectStartDate">Project Start Date:</label>
                    <input type="date" id="projectStartDate" name="projectStartDate">
                </div>
                <div class="grid-item">
                    <label for="projectEndDate">Project End Date:</label>
                    <input type="date" id="projectEndDate" name="projectEndDate">
                </div>
            </div>
        </fieldset>

        <button type="button" class="continue-button" onclick="saveData()">Submit</button>
    </form>
</body>

</html>