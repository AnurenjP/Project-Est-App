<!DOCTYPE html>
<html lang="en">
<head>
    <title>Estimation Page</title>
    <link rel="stylesheet" href="~/Content/site.css" />
</head>
<body>
    <div class="form-box">
        <h2>Estimation Page</h2>

        <form>
            <div class="section-title form-group col-8">
                <label for="AnalysisandDesign">Analysis & Design</label>
                <span id="AnalysisandDesign" class="total-label"></span>
            </div>
            <div class="inner-box">
                <div class="form-group col-9">
                    <label for="Analysisandrequirementsignoff">Analysis and requirement sign off</label>
                    <input type="number" id="Analysisandrequirementsignoff" name="Analysisandrequirementsignoff" oninput="updateSum()">
                </div>
                <div class="form-group col-9">
                    <label for="FunctionalDesign">Functional Design</label>
                    <input type="number" id="FunctionalDesign" name="FunctionalDesign" oninput="updateSum()">
                </div>
                <div class="form-group col-9">
                    <label for="TechnicalDesign">Technical Design</label>
                    <input type="number" id="TechnicalDesign" name="TechnicalDesign" oninput="updateSum()">
                </div>
            </div>

            <div class="section-title form-group col-8">
                <label for="Coding">Coding</label>
                <span id="Coding" class="total-label"></span>
            </div>
            <div class="inner-box">
                <div class="form-group col-9">
                    <label for="Frontendchanges">Frontend changes</label>
                    <input type="number" id="Frontendchanges" name="Frontendchanges" oninput="updateSum()">
                </div>
                <div class="form-group col-9">
                    <label for="IntegrationChanges">Integration Changes</label>
                    <input type="number" id="IntegrationChanges" name="IntegrationChanges" oninput="updateSum()">
                </div>
                <div class="form-group col-9">
                    <label for="BackendChanges">Backend Changes</label>
                    <input type="number" id="BackendChanges" name="BackendChanges" oninput="updateSum()">
                </div>
            </div>

            <div class="section-title form-group col-8">
                <label for="UnitTesting">Unit Testing</label>
                <span id="UnitTesting" class="total-label"></span>
            </div>
            <div class="inner-box">
                <div class="form-group col-9">
                    <label for="UnitTestCasePreparation">Unit Test Case Preparation</label>
                    <input type="number" id="UnitTestCasePreparation" name="UnitTestCasePreparation" oninput="updateSum()">
                </div>
                <div class="form-group col-9">
                    <label for="UnittestlogsandDefectFix">Unit test logs and Defect Fix</label>
                    <input type="number" id="UnittestlogsandDefectFix" name="UnittestlogsandDefectFix" oninput="updateSum()">
                </div>
                <div class="form-group col-9">
                    <label for="CodeReview">Code Review</label>
                    <input type="number" id="CodeReview" name="CodeReview" oninput="updateSum()">
                </div>
                <div class="form-group col-9">
                    <label for="UnitTestCaseReview">Unit Test Case Review</label>
                    <input type="number" id="UnitTestCaseReview" name="UnitTestCaseReview" oninput="updateSum()">
                </div>
                <div class="form-group col-9">
                    <label for="UnittestResultReview">Unit test Result Review</label>
                    <input type="number" id="UnittestResultReview" name="UnittestResultReview" oninput="updateSum()">
                </div>
            </div>

            <div class="section-title form-group col-8">
                <label for="QAandUATTesting">QA & UAT Testing</label>
                <span id="QAandUATTesting" class="total-label"></span>
            </div>
            <div class="inner-box">
                <div class="form-group col-9">
                    <label for="QATestCasePreparation">QA Test Case Preparation</label>
                    <input type="number" id="QATestCasePreparation" name="QATestCasePreparation" oninput="updateSum()">
                </div>
                <div class="form-group col-9">
                    <label for="QATestingandDefectFix">QA Testing and Defect Fix</label>
                    <input type="number" id="QATestingandDefectFix" name="QATestingandDefectFix" oninput="updateSum()">
                </div>
                <div class="form-group col-9">
                    <label for="IntegrationTesting">Integration Testing</label>
                    <input type="number" id="IntegrationTesting" name="IntegrationTesting" oninput="updateSum()">
                </div>
                <div class="form-group col-9">
                    <label for="UATTestingandDefectFix">UAT Testing and Defect Fix</label>
                    <input type="number" id="UATTestingandDefectFix" name="UATTestingandDefectFix" oninput="updateSum()">
                </div>
                <div class="form-group col-9">
                    <label for="QAandTestResultReview">QA and Test Result Review</label>
                    <input type="number" id="QAandTestResultReview" name="QAandTestResultReview" oninput="updateSum()">
                </div>
                <div class="form-group col-9">
                    <label for="QAandUATSupport">QA & UAT Support</label>
                    <input type="number" id="QAandUATSupport" name="QAandUATSupport" oninput="updateSum()">
                </div>
            </div>

            <div class="form-group col-8">
                <label for="ReleaseManagement">Release Management</label>
                <span id="ReleaseManagement" class="total-label"></span>
            </div>
            <div class="inner-box">
                <div class="form-group col-9">
                    <div class="combined-labels">
                        <label for="combined-labels">Release artifact</label>
                        <label for="combined-labels">Version Labelling</label>
                        <label for="combined-labels">PVCS\Bitbucket Check In</label>
                        <label for="combined-labels">SDLC Document</label>
                    </div>
                    <div>
                        <input type="number" id="Releasemanagement" name="Releasemanagement" oninput="updateSum()">
                    </div>
                </div>
            </div>

            <div class="section-title form-group col-8">
                <label for="Support">Support</label>
                <span id="Support" class="total-label"></span>
            </div>
            <div class="inner-box">
                <div class="form-group col-9">
                    <label for="DeploymentSupport">Deployment Support</label>
                    <input type="number" id="DeploymentSupport" name="DeploymentSupport" oninput="updateSum()">
                </div>
                <div class="form-group col-9">
                    <label for="WarrantySupport">Warranty Support</label>
                    <input type="number" id="WarrantySupport" name="WarrantySupport" oninput="updateSum()">
                </div>
            </div>
        </form>

        <button id="SummaryButton" onclick="updatesummary()">Summary</button>

        <form id="SummaryContainer" style="display: none;">
            <div class="section-title form-group col-8">
                <label for="EstimationSummary">Estimation Summary</label>
                <span id="EstimationSummary" class="total-label"></span>
            </div>
            <div class="inner-box">
                <div class="form-group col-9">
                    <label for="AnalysisandDesign1">Analysis & Design</label>
                    <input type="number" id="AnalysisandDesign1" name="AnalysisandDesign1" readonly>
                </div>
                <div class="form-group col-9">
                    <label for="Construction">Construction</label>
                    <input type="number" id="Construction" name="Construction" readonly>
                </div>
                <div class="form-group col-9">
                    <label for="QA">QA</label>
                    <input type="number" id="QA" name="QA" readonly>
                </div>
                <div class="form-group col-9">
                    <label for="UAT">UAT</label>
                    <input type="number" id="UAT" name="UAT" readonly>
                </div>
                <div class="form-group col-9">
                    <label for="Deploymentsupport">Deployment Support</label>
                    <input type="number" id="Deploymentsupport" name="Deploymentsupport" readonly>
                </div>
                <div class="form-group col-9">
                    <label for="Warantysupport">Waranty Support</label>
                    <input type="number" id="Warantysupport" name="Warantysupport" readonly>
                </div>
            </div>
            <button type="button" class="continue-button" onclick="navigateTo()">Continue</button>
        </form>
    </div>

    <script>
        function navigateTo() {
            window.location.href = '@Url.Action("Resource", "Home")';
        }

        document.getElementById("SummaryButton").addEventListener("click", function () {
            var Summary = document.getElementById("SummaryContainer");
            if (Summary.style.display === "none" || Summary.style.display === "") {
                Summary.style.display = "block";
            }
        });

        function updateSum() {
            const analysis = parseFloat(document.getElementById('Analysisandrequirementsignoff').value) || 0;
            const functional = parseFloat(document.getElementById('FunctionalDesign').value) || 0;
            const technical = parseFloat(document.getElementById('TechnicalDesign').value) || 0;

            const sum = analysis + functional + technical;
            document.getElementById('AnalysisandDesign').innerText = sum;

            // Sum for Coding
            const frontend = parseFloat(document.getElementById('Frontendchanges').value) || 0;
            const Integration = parseFloat(document.getElementById('IntegrationChanges').value) || 0;
            const backend = parseFloat(document.getElementById('BackendChanges').value) || 0;

            const sum1 = frontend + Integration + backend;
            document.getElementById('Coding').innerText = sum1;

            // Sum for Unit Testing
            const UnitTestCase = parseFloat(document.getElementById('UnitTestCasePreparation').value) || 0;
            const testlogsandDefectFix = parseFloat(document.getElementById('UnittestlogsandDefectFix').value) || 0;
            const Review = parseFloat(document.getElementById('CodeReview').value) || 0;
            const TestCaseReview = parseFloat(document.getElementById('UnitTestCaseReview').value) || 0;
            const testResultReview = parseFloat(document.getElementById('UnittestResultReview').value) || 0;

            const sum2 = UnitTestCase + testlogsandDefectFix + Review + TestCaseReview + testResultReview;
            document.getElementById('UnitTesting').innerText = sum2;

            // Sum for QA & UAT Testing
            const QATestCase = parseFloat(document.getElementById('QATestCasePreparation').value) || 0;
            const QATestingandDefectFix = parseFloat(document.getElementById('QATestingandDefectFix').value) || 0;
            const IntegrationTest = parseFloat(document.getElementById('IntegrationTesting').value) || 0;
            const UATTestandDefectFix = parseFloat(document.getElementById('UATTestingandDefectFix').value) || 0;
            const QAtestResultReview = parseFloat(document.getElementById('QAandTestResultReview').value) || 0;
            const QAUATSupport = parseFloat(document.getElementById('QAandUATSupport').value) || 0;

            const sum3 = QATestCase + QATestingandDefectFix + IntegrationTest + UATTestandDefectFix + QAtestResultReview + QAUATSupport;
            document.getElementById('QAandUATTesting').innerText = sum3;

            // Sum for Release Management
            const combined = parseFloat(document.getElementById('Releasemanagement').value) || 0;

            const sum4 = combined;
            document.getElementById('ReleaseManagement').innerText = sum4;

            // Sum for Support
            const Deployment = parseFloat(document.getElementById('DeploymentSupport').value) || 0;
            const Warranty = parseFloat(document.getElementById('WarrantySupport').value) || 0;

            const sum5 = Deployment + Warranty;
            document.getElementById('Support').innerText = sum5;
        }

        function updatesummary() {
            const AnalysisandDesign1field = document.getElementById('AnalysisandDesign').innerText;
            document.getElementById('AnalysisandDesign1').value = AnalysisandDesign1field;

            // Sum for construction
            const Construction1 = parseFloat(document.getElementById('Coding').innerText);
            const Construction2 = parseFloat(document.getElementById('UnitTesting').innerText);
            const Construction3 = parseFloat(document.getElementById('ReleaseManagement').innerText);

            const construction = Construction1 + Construction2 + Construction3;
            document.getElementById('Construction').value = construction;

            // Deployment
            const Deploymentfield = document.getElementById('DeploymentSupport').value;
            document.getElementById('Deploymentsupport').value = Deploymentfield;

            // Warranty
            const Warrantyfield = document.getElementById('WarrantySupport').value;
            document.getElementById('Warantysupport').value = Warrantyfield;

            // QA & UAT
            const Percentage = parseFloat(document.getElementById('QAandUATTesting').innerText);
            const QApercentage = (Percentage * 60) / 100;
            const UATpercentage = (Percentage * 40) / 100;

            document.getElementById('QA').value = QApercentage;
            document.getElementById('UAT').value = UATpercentage;

            // Estimation Summary
            const Analysis = parseFloat(document.getElementById('AnalysisandDesign1').value) || 0;
            const Construct = parseFloat(document.getElementById('Construction').value) || 0;
            const Deploy = parseFloat(document.getElementById('Deploymentsupport').value) || 0;
            const Waranty = parseFloat(document.getElementById('Warantysupport').value) || 0;
            const QA = parseFloat(document.getElementById('QA').value) || 0;
            const UAT = parseFloat(document.getElementById('UAT').value) || 0;

            const summary = Analysis + Construct + Deploy + Waranty + QA + UAT;
            document.getElementById('EstimationSummary').innerText = summary;
        }

        // function timeLine() {
        //     // Retrieve values from input fields and store them in localStorage
        //     const Analysisandrequirementsignoff = parseFloat(document.getElementById('Analysisandrequirementsignoff').value) || 0;
        //     localStorage.setItem('Analysisandrequirementsignoff', Analysisandrequirementsignoff);
        //     console.log("Analysisandrequirementsignoff :", Analysisandrequirementsignoff);

        //     const functional = parseFloat(document.getElementById('FunctionalDesign').value) || 0;
        //     localStorage.setItem('FunctionalDesign', functional);
        //     const technical = parseFloat(document.getElementById('TechnicalDesign').value) || 0;
        //     localStorage.setItem('TechnicalDesign', technical);

        //     const Frontendchanges = parseFloat(document.getElementById('Frontendchanges').value) || 0;
        //     localStorage.setItem('Frontendchanges', Frontendchanges);
        //     const IntegrationChanges = parseFloat(document.getElementById('IntegrationChanges').value) || 0;
        //     const BackendChanges = parseFloat(document.getElementById('BackendChanges').value) || 0;

        //     localStorage.setItem('IntegrationChanges', IntegrationChanges);
        //     console.log("IntegrationChanges :", IntegrationChanges);
        //     localStorage.setItem('BackendChanges', BackendChanges);
        //     console.log("BackendChanges :", BackendChanges);

        //     const UnitTestCasePreparation = parseFloat(document.getElementById('UnitTestCasePreparation').value) || 0;
        //     const UnittestlogsandDefectFix = parseFloat(document.getElementById('UnittestlogsandDefectFix').value) || 0;
        //     const CodeReview = parseFloat(document.getElementById('CodeReview').value) || 0;
        //     const UnitTestCaseReview = parseFloat(document.getElementById('UnitTestCaseReview').value) || 0;
        //     const UnittestResultReview = parseFloat(document.getElementById('UnittestResultReview').value) || 0;

        //     localStorage.setItem('UnitTestCasePreparation', UnitTestCasePreparation);
        //     localStorage.setItem('UnittestlogsandDefectFix', UnittestlogsandDefectFix);
        //     localStorage.setItem('CodeReview', CodeReview);
        //     localStorage.setItem('UnitTestCaseReview', UnitTestCaseReview);
        //     localStorage.setItem('UnittestResultReview', UnittestResultReview);

        //     const Releasemanagement = parseFloat(document.getElementById('Releasemanagement').value) || 0;
        //     localStorage.setItem('Releasemanagement', Releasemanagement);

        //     const QAandTestResultReview = parseFloat(document.getElementById('QAandTestResultReview').value) || 0;
        //     localStorage.setItem('QAandTestResultReview', QAandTestResultReview);
        //     const QAandUATSupport = parseFloat(document.getElementById('QAandUATSupport').value) || 0;
        //     localStorage.setItem('QAandUATSupport', QAandUATSupport);

        //     const QATestCase = parseFloat(document.getElementById('QATestCasePreparation').value) || 0;
        //     const QATestingandDefectFix = parseFloat(document.getElementById('QATestingandDefectFix').value) || 0;
        //     const IntegrationTest = parseFloat(document.getElementById('IntegrationTesting').value) || 0;

        //     localStorage.setItem('QATestCasePreparation', QATestCase);
        //     localStorage.setItem('QATestingandDefectFix', QATestingandDefectFix);
        //     localStorage.setItem('IntegrationTesting', IntegrationTest);

        //     const UATTestandDefectFix = parseFloat(document.getElementById('UATTestingandDefectFix').value) || 0;
        //     localStorage.setItem('UATTestingandDefectFix', UATTestandDefectFix);

        //     const Deployment = parseFloat(document.getElementById('DeploymentSupport').value) || 0;
        //     localStorage.setItem('DeploymentSupport', Deployment);

        //     const Warranty = parseFloat(document.getElementById('WarrantySupport').value) || 0;
        //     localStorage.setItem('WarrantySupport', Warranty);
        // }

        function load() {

            const projectType = localStorage.getItem('projectType');
            const projectComplexity = localStorage.getItem('projectComplexity');
            console.log("Retreived type:", projectType);
            console.log("Retreived Complexity:", projectComplexity);

            const defaultValues = {
                "Small-Low": {
                    "Analysisandrequirementsignoff": 2, "FunctionalDesign": 2, "TechnicalDesign": 3, "Frontendchanges": 20, "IntegrationChanges": 10, "BackendChanges": 10,
                    "UnitTestCasePreparation": 1, "UnittestlogsandDefectFix": 6, "CodeReview": 1, "UnitTestCaseReview": 1, "UnittestResultReview": 1, "QATestCasePreparation": 2, "QATestingandDefectFix": 13,
                    "IntegrationTesting": 4, "UATTestingandDefectFix": 8, "QAandTestResultReview": 1, "QAandUATSupport": 4, "Releasemanagement": 10, "DeploymentSupport": 1, "WarrantySupport": 0
                },
                "Small-Medium": {
                    "Analysisandrequirementsignoff": 2, "FunctionalDesign": 3, "TechnicalDesign": 5, "Frontendchanges": 30, "IntegrationChanges": 15, "BackendChanges": 15,
                    "UnitTestCasePreparation": 1, "UnittestlogsandDefectFix": 12, "CodeReview": 2, "UnitTestCaseReview": 1, "UnittestResultReview": 1, "QATestCasePreparation": 3, "QATestingandDefectFix": 20,
                    "IntegrationTesting": 6, "UATTestingandDefectFix": 10, "QAandTestResultReview": 1, "QAandUATSupport": 6, "Releasemanagement": 15, "DeploymentSupport": 1, "WarrantySupport": 1
                },
                "Small-High": {
                    "Analysisandrequirementsignoff": 2, "FunctionalDesign": 4, "TechnicalDesign": 18, "Frontendchanges": 40, "IntegrationChanges": 20, "BackendChanges": 20,
                    "UnitTestCasePreparation": 2, "UnittestlogsandDefectFix": 12, "CodeReview": 2, "UnitTestCaseReview": 1, "UnittestResultReview": 1, "QATestCasePreparation": 4, "QATestingandDefectFix": 26,
                    "IntegrationTesting": 8, "UATTestingandDefectFix": 16, "QAandTestResultReview": 2, "QAandUATSupport": 8, "Releasemanagement": 20, "DeploymentSupport": 2, "WarrantySupport": 2
                },
                "Medium-Low": {
                    "Analysisandrequirementsignoff": 3, "FunctionalDesign": 6, "TechnicalDesign": 12, "Frontendchanges": 60, "IntegrationChanges": 32, "BackendChanges": 35,
                    "UnitTestCasePreparation": 2, "UnittestlogsandDefectFix": 16, "CodeReview": 2, "UnitTestCaseReview": 1, "UnittestResultReview": 1, "QATestCasePreparation": 4, "QATestingandDefectFix": 40,
                    "IntegrationTesting": 12, "UATTestingandDefectFix": 24, "QAandTestResultReview": 3, "QAandUATSupport": 12, "Releasemanagement": 25, "DeploymentSupport": 2, "WarrantySupport": 8
                },
                "Medium-Medium": {
                    "Analysisandrequirementsignoff": 4, "FunctionalDesign": 8, "TechnicalDesign": 16, "Frontendchanges": 80, "IntegrationChanges": 40, "BackendChanges": 40,
                    "UnitTestCasePreparation": 4, "UnittestlogsandDefectFix": 24, "CodeReview": 4, "UnitTestCaseReview": 2, "UnittestResultReview": 2, "QATestCasePreparation": 6, "QATestingandDefectFix": 54,
                    "IntegrationTesting": 18, "UATTestingandDefectFix": 32, "QAandTestResultReview": 4, "QAandUATSupport": 16, "Releasemanagement": 30, "DeploymentSupport": 4, "WarrantySupport": 12
                },
                "Medium-High": {
                    "Analysisandrequirementsignoff": 6, "FunctionalDesign": 8, "TechnicalDesign": 16, "Frontendchanges": 100, "IntegrationChanges": 50, "BackendChanges": 50,
                    "UnitTestCasePreparation": 4, "UnittestlogsandDefectFix": 30, "CodeReview": 5, "UnitTestCaseReview": 3, "UnittestResultReview": 3, "QATestCasePreparation": 6, "QATestingandDefectFix": 80,
                    "IntegrationTesting": 24, "UATTestingandDefectFix": 35, "QAandTestResultReview": 6, "QAandUATSupport": 24, "Releasemanagement": 30, "DeploymentSupport": 4, "WarrantySupport": 16
                },
                "Large-Low": {
                    "Analysisandrequirementsignoff": 6, "FunctionalDesign": 12, "TechnicalDesign": 24, "Frontendchanges": 120, "IntegrationChanges": 70, "BackendChanges": 70,
                    "UnitTestCasePreparation": 4, "UnittestlogsandDefectFix": 32, "CodeReview": 4, "UnitTestCaseReview": 2, "UnittestResultReview": 2, "QATestCasePreparation": 8, "QATestingandDefectFix": 80,
                    "IntegrationTesting": 24, "UATTestingandDefectFix": 50, "QAandTestResultReview": 6, "QAandUATSupport": 24, "Releasemanagement": 30, "DeploymentSupport": 8, "WarrantySupport": 24
                },
                "Large-Medium": {
                    "Analysisandrequirementsignoff": 8, "FunctionalDesign": 15, "TechnicalDesign": 25, "Frontendchanges": 140, "IntegrationChanges": 80, "BackendChanges": 80,
                    "UnitTestCasePreparation": 4, "UnittestlogsandDefectFix": 40, "CodeReview": 6, "UnitTestCaseReview": 3, "UnittestResultReview": 3, "QATestCasePreparation": 8, "QATestingandDefectFix": 100,
                    "IntegrationTesting": 30, "UATTestingandDefectFix": 60, "QAandTestResultReview": 6, "QAandUATSupport": 24, "Releasemanagement": 30, "DeploymentSupport": 8, "WarrantySupport": 30
                },
                "Large-High": {
                    "Analysisandrequirementsignoff": 10, "FunctionalDesign": 16, "TechnicalDesign": 32, "Frontendchanges": 160, "IntegrationChanges": 80, "BackendChanges": 80,
                    "UnitTestCasePreparation": 6, "UnittestlogsandDefectFix": 50, "CodeReview": 8, "UnitTestCaseReview": 4, "UnittestResultReview": 4, "QATestCasePreparation": 12, "QATestingandDefectFix": 120,
                    "IntegrationTesting": 36, "UATTestingandDefectFix": 64, "QAandTestResultReview": 8, "QAandUATSupport": 32, "Releasemanagement": 30, "DeploymentSupport": 8, "WarrantySupport": 40
                }
            };

            const selectedkey = `${projectType}-${projectComplexity}`;
            console.log("selectedKey:", selectedkey);
            const values = defaultValues[selectedkey];

            if (values) {
                document.getElementById('Analysisandrequirementsignoff').value = values.Analysisandrequirementsignoff;
                document.getElementById('FunctionalDesign').value = values.FunctionalDesign;
                document.getElementById('TechnicalDesign').value = values.TechnicalDesign;
                document.getElementById('Frontendchanges').value = values.Frontendchanges;
                document.getElementById('IntegrationChanges').value = values.IntegrationChanges;
                document.getElementById('BackendChanges').value = values.BackendChanges;
                document.getElementById('UnitTestCasePreparation').value = values.UnitTestCasePreparation;
                document.getElementById('UnittestlogsandDefectFix').value = values.UnittestlogsandDefectFix;
                document.getElementById('CodeReview').value = values.CodeReview;
                document.getElementById('UnitTestCaseReview').value = values.UnitTestCaseReview;
                document.getElementById('UnittestResultReview').value = values.UnittestResultReview;
                document.getElementById('QATestCasePreparation').value = values.QATestCasePreparation;
                document.getElementById('QATestingandDefectFix').value = values.QATestingandDefectFix;
                document.getElementById('IntegrationTesting').value = values.IntegrationTesting;
                document.getElementById('UATTestingandDefectFix').value = values.UATTestingandDefectFix;
                document.getElementById('QAandTestResultReview').value = values.QAandTestResultReview;
                document.getElementById('QAandUATSupport').value = values.QAandUATSupport;
                document.getElementById('Releasemanagement').value = values.Releasemanagement;
                document.getElementById('DeploymentSupport').value = values.DeploymentSupport;
                document.getElementById('WarrantySupport').value = values.WarrantySupport;


                updateSum();

            }

        }
        function timeLine() {


            const Analysisandrequirementsignoff = parseFloat(document.getElementById('Analysisandrequirementsignoff').value) || 0;
            localStorage.setItem('Analysisandrequirementsignoff', Analysisandrequirementsignoff);
            console.log("Analysisandrequirementsignoff :", Analysisandrequirementsignoff);

            const functional = parseFloat(document.getElementById('FunctionalDesign').value) || 0;
            localStorage.setItem('FunctionalDesign', functional);
            const technical = parseFloat(document.getElementById('TechnicalDesign').value) || 0;
            localStorage.setItem('TechnicalDesign', technical);



            const Frontendchanges = parseFloat(document.getElementById('Frontendchanges').value) || 0;
            localStorage.setItem('Frontendchanges', Frontendchanges);
            const IntegrationChanges = parseFloat(document.getElementById('IntegrationChanges').value) || 0;
            const BackendChanges = parseFloat(document.getElementById('BackendChanges').value) || 0;


            localStorage.setItem('IntegrationChanges', IntegrationChanges);
            console.log("IntegrationChanges :", IntegrationChanges);
            localStorage.setItem('BackendChanges', BackendChanges);
            console.log("BackendChanges :", BackendChanges);

            const UnitTestCasePreparation = parseFloat(document.getElementById('UnitTestCasePreparation').value) || 0;
            const UnittestlogsandDefectFix = parseFloat(document.getElementById('UnittestlogsandDefectFix').value) || 0;
            const CodeReview = parseFloat(document.getElementById('CodeReview').value) || 0;
            const UnitTestCaseReview = parseFloat(document.getElementById('UnitTestCaseReview').value) || 0;
            const UnittestResultReview = parseFloat(document.getElementById('UnittestResultReview').value) || 0;

            // const UnitTesting = UnitTestCase + testlogsandDefectFix + Review + TestCaseReview + testResultReview;
            localStorage.setItem('UnitTestCasePreparation', UnitTestCasePreparation);
            localStorage.setItem('UnittestlogsandDefectFix', UnittestlogsandDefectFix);
            localStorage.setItem('CodeReview', CodeReview);
            localStorage.setItem('UnitTestCaseReview', UnitTestCaseReview);
            localStorage.setItem('UnittestResultReview', UnittestResultReview);


            const Releasemanagement = parseFloat(document.getElementById('Releasemanagement').value) || 0;
            localStorage.setItem('Releasemanagement', Releasemanagement);

            const QAandTestResultReview = parseFloat(document.getElementById('QAandTestResultReview').value) || 0;
            localStorage.setItem('QAandTestResultReview', QAandTestResultReview);
            const QAandUATSupport = parseFloat(document.getElementById('QAandUATSupport').value) || 0;
            localStorage.setItem('QAandUATSupport', QAandUATSupport);

            const QATestCase = parseFloat(document.getElementById('QATestCasePreparation').value) || 0;
            const QATestingandDefectFix = parseFloat(document.getElementById('QATestingandDefectFix').value) || 0;
            const IntegrationTest = parseFloat(document.getElementById('IntegrationTesting').value) || 0;

            localStorage.setItem('QATestCasePreparation', QATestCase);
            localStorage.setItem('QATestingandDefectFix', QATestingandDefectFix);
            localStorage.setItem('IntegrationTesting', IntegrationTest);

            const UATTestandDefectFix = parseFloat(document.getElementById('UATTestingandDefectFix').value) || 0;
            localStorage.setItem('UATTestingandDefectFix', UATTestandDefectFix);

            const Deployment = parseFloat(document.getElementById('DeploymentSupport').value) || 0;
            localStorage.setItem('DeploymentSupport', Deployment);

            const Warranty = parseFloat(document.getElementById('WarrantySupport').value) || 0;
            localStorage.setItem('WarrantySupport', Warranty);


        }
        function samplebudget(){
             const Analysis = parseFloat(document.getElementById('AnalysisandDesign').innerText) || 0;
              localStorage.setItem('AnalysisandDesign', Analysis);
              const Coding = parseFloat(document.getElementById('Coding').innerText) || 0;
              localStorage.setItem('Coding', Analysis);
              const UnitTesting = parseFloat(document.getElementById('UnitTesting').innerText) || 0;
              localStorage.setItem('UnitTesting', UnitTesting);
              const QAandUATTesting = parseFloat(document.getElementById('QAandUATTesting').innerText) || 0;
              localStorage.setItem('QAandUATTesting', QAandUATTesting);
              const Support = parseFloat(document.getElementById('Support').innerText) || 0;
              localStorage.setItem('Support', Support);
              console.log("Support :", Support);
        }
        document.addEventListener('DOMContentLoaded', load);

        document.addEventListener('DOMContentLoaded', timeLine);
        document.addEventListener('DOMContentLoaded', samplebudget);

    </script>
</body>
</html>